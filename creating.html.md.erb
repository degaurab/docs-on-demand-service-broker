---
title: Creating a Service Release
owner: London Services Enablement
---

This topic provides information for service authors about how to create a service
release for an on-demand service tile.


##<a id="what-is-required-of-the-service-authors"></a> Service Author Deliverables

Service authors are responsible for the following:

- The Service Release to be deployed by the manifest that is generated by the Service Adapter. See
[Create a Service Release](#create-a-service-release) below.

- The Service Adapter. See [Creating a Service Adapter](./service-adapter.html).

- Documentation for the operator to configure plan definitions for the Service Adapter.

- Documentation for the operator to backup and restore service instances.
  <%# For the sort of things that operators need to know, see [Operator Responsibilities](operating.html#operator-checklist). %>


## <a id="create-a-service-release"></a>Overview

A service release is a BOSH release of the service that you want to create an on-demand tile for.
The on-demand broker (ODB) deploys this release at instance creation time, once for each service instance.

To create a service release, Pivotal recommends that you do the following:

1. [Package and Test your Service Release](#package-service)
2. Refine your release, see [Use Job Links](#job-links) and
[Include Service Instance Lifecycle Errands](#service-instance-lifecycle-errands)
3. [Package your Final Service Release](#final-release)


### <a id="package-service"></a>Package and Test your Service Release

Package your service release as a BOSH release so that you can check that your release will deploy.
Create a Bosh release for the service and create a bosh manifest that you can use
to manually deploy the service.

1. Follow the instructions up to and including [Step 6: Create a Dev Release](https://bosh.io/docs/create-release/#dev-release).

1. Pivotal recommends creating sample manifest(s) that deploy the service release(s).
This will help you to write the `generate-manifest` component of the Service Adapter.

1. When you have finished testing your deployment, delete and clean it up.

See the following example service releases:

* [Redis example service release](https://github.com/pivotal-cf-experimental/redis-example-service-release)
* [Kafka example service release](https://github.com/pivotal-cf-experimental/kafka-example-service-release)

### <a id="job-links"></a>Use Job Links

When generating a manifest, Pivotal recommends not using static IPs, which make
network IP management very complex.
Instead, Pivotal recommends using BOSH's job links feature.

For more information about the links feature, see
[Links](https://bosh.io/docs/links.html) in the BOSH documentation.

The Kafka example service release uses implicit job links to get the IPs of the
brokers and the zookeeper.
See the [Kafka example service release](https://github.com/pivotal-cf-experimental/kafka-example-service-release/blob/master/jobs/kafka_server/spec#L15).


### <a id="service-instance-lifecycle-errands"></a>Include Service Instance Lifecycle Errands

 <p class="note"><strong>Note</strong>: This feature requires BOSH director v261 or later.</p>

A service release can provide job errands that are used by ODB during the management of an instance lifecycle.
A deployment is only considered successful if along with the deployment all lifecycle errands complete successfully.
For more information, see [Service Instance Lifecycle Errands](./operating.html#lifecycle-errands).
Operators can configure <%# enable/disable? any other configuration? %> the service instance lifecycle errands that you add in the
deployment manifest or in the tile.

ODB supports the following service instance lifecycle errands:

- `post-deploy`: These errands run after the creation or updating of a service instance.
For information about the workflow, see [Create or Update Service Instance with Post-Deploy Errands](./concepts.html#post-deploy).
- `pre-delete`: These errands run before the deletion of a service instance.
For information about the workflow, see [Delete a Service Instance with Pre-Delete Errand](./concepts.html#pre-delete).

To add lifecycle errands to your service release, do the following:

1. Decide on the errands you need and write code for them.
You can use information you gleaned while testing your deployment to inform the
errands your service instances will need.
For example, you might use the criteria you used to test the deployment to inform
a healthcheck post-deploy errand or you might use how you deleted and cleaned up
the deployement to create a post-delete errand.

1. Define lifecycle errands as jobs in the service release so that the broker can invoke them.
For more information about errands, see the [BOSH documentation](https://bosh.io/docs/errands.html).

1. If you are using the `generate-manifest` command, you must validate and include
any supported errands in the instance groups array that are specified as errands
that are passed into the plan parameter.
For more information about this command, see [generate-manifest](./adapter-reference.html#generate-manifest).

See an example implementation of a health check `post-deploy` job in the
[redis-example-service-release](https://github.com/pivotal-cf-experimental/redis-example-service-release/tree/master/jobs/health-check).

#### <a id="colocated-errands"></a>Colocated Errands

<p class="note"><strong>Note</strong>: This feature requires BOSH director v263 or later.</p>


Colocated errands run on an existing service instance group, avoiding additional resource allocation.
Colocated errands run faster  because they are already deployed on a VM other wise you would have to allocate a VM
Both `post-deploy` and `pre-delete` errands can be run as colocated errands.

To enable a new colocated errand, add the errand to the list of jobs of an instance group.



### <a id="final-release"></a>Package your Final Service Release

To package the final release, follow the instructions in [Create a Final Release](https://bosh.io/docs/create-release/#final-release) in the BOSH documentation.
This is the release that will be collocated with ODB in the BOSH manifest.
