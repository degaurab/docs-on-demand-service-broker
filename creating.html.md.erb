---
title: Creating a Service Release
owner: London Services Enablement
---

This topic provides information for service authors about how to create a service
release for an on-demand service tile.


## <a id="what-is-required-of-the-service-authors"></a> Service Author Deliverables

Service authors provide the following:

- The Service Release. See [Overview](#create-a-service-release) below.

- The Service Adapter. See [Creating a Service Adapter](./service-adapter.html).

- Documentation for the operator to configure plan definitions for the Service Adapter.

- Documentation for the operator to backup and restore service instances.


## <a id="create-a-service-release"></a>Overview

A service release is a BOSH release of the service that you want to create on-demand instances of.
The on-demand broker (ODB) deploys this release at instance creation time,
once for each service instance.

To create a service release, Pivotal recommends that you do the following:

1. [Package an Initial Service Release](#package-service)

2. Refine your release using information in the following sections:
 - [Use Job Links](#job-links)
 - [Include Service Instance Lifecycle Errands](#service-instance-lifecycle-errands)

3. [Package your Final Service Release](#final-release)

Example service releases:

* [Redis example service release](https://github.com/pivotal-cf-experimental/redis-example-service-release)
* [Kafka example service release](https://github.com/pivotal-cf-experimental/kafka-example-service-release)


## <a id="package-service"></a>Package an Initial Service Release

Package an initial version of the BOSH release for your service for testing purposes.
To do so, create a BOSH release and a BOSH manifest for the service and manually
deploy the service as follows:

1. Package and test the initial service release. To do so, follow the instructions
in [Creating a Release](https://bosh.io/docs/create-release/) in the BOSH Documentation
up to and including _Step 6: Create a Dev Release_.

1. Pivotal recommends that you create sample BOSH manifest(s) that deploy the service release.
This will help you to write the `generate-manifest` component of the Service Adapter.

1. When you have finished testing the deployment, delete and clean it up.


## <a id="job-links"></a>Use Job Links

When generating a manifest, Pivotal recommends not using static IPs, which make
network IP management very complex.
Instead, Pivotal recommends using BOSH's job links feature.

For more information about the links feature, see
[Links](https://bosh.io/docs/links.html) in the BOSH documentation.

The Kafka example service release uses implicit job links to get the IPs of the
brokers and the zookeeper.
See the [Kafka example service release](https://github.com/pivotal-cf-experimental/kafka-example-service-release/blob/master/jobs/kafka_server/spec#L15).


## <a id="service-instance-lifecycle-errands"></a>Include Service Instance Lifecycle Errands

 <p class="note"><strong>Note</strong>: This feature requires BOSH director v261 or later.</p>

A service release can provide job errands that are used by ODB during the management of an instance lifecycle.
A deployment is only considered successful if along with the deployment all lifecycle errands complete successfully.
For more information, see [Service Instance Lifecycle Errands](./operating.html#lifecycle-errands).
Operators can configure <%# enable/disable? any other configuration? %> the service instance lifecycle errands that you add in the
deployment manifest or in the tile.

ODB supports the following service instance lifecycle errands:

- `post-deploy`: These errands run after the creation or updating of a service instance.
For information about the workflow, see [Create or Update Service Instance with Post-Deploy Errands](./concepts.html#post-deploy).
- `pre-delete`: These errands run before the deletion of a service instance.
For information about the workflow, see [Delete a Service Instance with Pre-Delete Errand](./concepts.html#pre-delete).

To add lifecycle errands to your service release, do the following:

1. Decide what errands your on-demand service needs.
You can use information you got while testing your deployment to inform the
errands your service instances need.
<br>
For example, you might use the criteria you used to test the deployment to inform
a healthcheck post-deploy errand or you might use how you deleted and cleaned up
the deployement to create a post-delete errand.

1.  Write code to run the errand and define them as jobs in the service release.
For how to do so, see the [Using Errands](https://bosh.io/docs/errands.html#release-definition) in the BOSH documentation.

<p class="note"><strong>Note: </strong>If you are using the <code>generate-manifest</code> command, you must validate and include
any supported errands in the instance groups array that are passed into the plan parameter.
For more information about this command, see <a href="./adapter-reference.html#generate-manifest">generate-manifest</a>.</p>

See an example implementation of a health check `post-deploy` errand in the
[redis-example-service-release](https://github.com/pivotal-cf-experimental/redis-example-service-release/tree/master/jobs/health-check)
on GitHub.


### <a id="colocated-errands"></a>Colocated Errands

<p class="note"><strong>Note</strong>: This feature requires BOSH director v263 or later.</p>

Colocated errands run on an existing service instance group, avoiding additional resource allocation.
Both `post-deploy` and `pre-delete` errands can be run as colocated errands.

To enable a new colocated errand, add the errand to the list of jobs of an instance group.


## <a id="final-release"></a>Package your Final Service Release

To package the final release, follow the instructions in [Create a Final Release](https://bosh.io/docs/create-release/#final-release) in the BOSH documentation.

The operator colocates this release with the ODB release in the broker manifest,
or a service author needs it when creating an on-demand service tile.
For more information, see [Write a Broker Manifest](./operating.html#broker-manifest) or
[Creating an On-Demand Service Tile](tile.html).
